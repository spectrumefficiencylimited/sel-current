name: Fetch and Process RSM Spectrum Data

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab for testing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to commit changes back to the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Dependencies (jq, DuckDB)
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          wget https://github.com/duckdb/duckdb/releases/download/v1.0.0/duckdb_cli-linux-amd64.zip -O duckdb.zip
          unzip duckdb.zip
          sudo mv duckdb /usr/local/bin/
          rm duckdb.zip

      - name: Run Data Fetch and Process Script
        env:
          RSM_API_KEY: ${{ secrets.RSM_API_KEY }}
        run: |
          chmod +x scripts/fetch-process-data.sh
          ./scripts/fetch-process-data.sh

      - name: Update build timestamp in index.html
        run: |
          # Use the stats.json file as the source of truth for the update time
          LAST_UPDATE_TIME=$(jq -r '.lastUpdateUTC' silver/stats.json)
          BUILD_TIME_FORMATTED=$(date -d "$LAST_UPDATE_TIME" '+%Y-%m-%d %H:%M:%S UTC')
          sed -i 's|Last build: <span id="buildTime">.*</span>|Last build: <span id="buildTime">'"$BUILD_TIME_FORMATTED"'</span>|g' index.html
          echo "Updated index.html with build time: $BUILD_TIME_FORMATTED"

      - name: Commit and Push Data Files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the generated files. Use --force to add files even if they are in .gitignore
          # We don't want to commit the pages, so we specifically add the results.
          git add silver/ bronze/combined_licences.json index.html
          
          # Check for changes before committing
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ðŸ“Š Data Update: $(date -u --iso-8601=seconds)"
            git push
          fi
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # The publish_dir should be the root of your repo since index.html is there.
          publish_dir: ./
          # This will ensure that the commit from the previous step is included in the deployment
          keep_files: true 
